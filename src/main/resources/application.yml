
spring.application.name: miya-item-service

server:
  port: 8087
  tomcat:
    uri-encoding: UTF-8

####### 服务注册中心配置  #########
eureka:
  client:
    serviceUrl:
      defaultZone: http://www.miya.com:8888/eureka/
####### 服务注册中心配置  #########



####### 数据库配置  #########
spring.datasource:
  initialize: false # Populate the database using 'data.sql'.
  name: dataSource # Name of the datasource.
  type: 'com.zaxxer.hikari.HikariDataSource'
  driver-class-name: 'com.mysql.jdbc.Driver'
  url: 'jdbc:mysql://www.miya.com:3306/miyadb?useUnicode=true&characterEncoding=utf-8&useSSL=true'
  username: root
  password: root
####### 数据库配置  #########




####### 图片配置  #########
#图片服务的url
IMAGE_SERVER_URL: http://120.78.222.191/
#如果上传的文件大于 1M 时，上传会报错文件太大的错误，在 application.properties 中设置上传文件的参数即可
spring.http.multipart.maxFileSize: 100Mb
spring.http.multipart.maxRequestSize: 100Mb
####### 图片配置  #########




####### Kafka配置  #########
spring.application.index: 0
spring.cloud.stream.instanceCount: 1
spring.cloud.stream.instanceIndex: 0

spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: 120.78.222.191:9092
          zk-nodes: 120.78.222.191:2181
          minPartitionCount: 1
          autoCreateTopics: true
          autoAddPartitions: true
      bindings:
        output:
          destination: item-add-topic
          content-type: text/plain
          producer:
            partitionCount: 1
#              bufferSize: 16384
#              maxRequestSize: 1048576
#              sync: true
#              batchTimeout: 0
####### Kafka配置  #########


####### Redis配置  #########
# Redis数据库索引（默认为0）
spring.redis:
  database: 0
  host: www.miya.com
  port: 6379
  password: chen0813
  pool.max-active: 8
  pool.max-wait: -1
  pool.max-idle: 8
  pool.min-idle: 0
  timeout: 0
####### Redis配置  #########



#### reids Item 缓存 配置   ####
INDEX_ITEM: MIYA_INDEX_ITEM
ITEM_INFO: MIYA_ITEM_INFO
TIEM_EXPIRE: 86400  # 24h
#### reids Item 缓存 配置   ####

ITEM_MIYA_URL: http://item.miya.com:8086



---
spring:
  profiles: envProd


---
spring:
  profiles: envTest

---
spring:
  profiles: envDev









